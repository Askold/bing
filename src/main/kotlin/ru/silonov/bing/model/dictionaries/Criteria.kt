package ru.silonov.bing.model.dictionaries

import jakarta.persistence.*
import java.util.UUID

@Entity
@Table(name = "criteria", schema = "bing")
data class Criteria(

    @Id
    @Column(name = "id", nullable = false, unique = true)
    @GeneratedValue
    var id: UUID,  // Primary Key, UUID generated by the database

    @Column(name = "code", nullable = false)
    var code: String,  // Code of the criterion, required

    @Column(name = "full_name", nullable = false)
    var fullName: String,  // Full name of the criterion, required

    @Column(name = "k1", nullable = false)
    var k1: String,  // Indicator K1, required

    @Column(name = "k2", nullable = false)
    var k2: String,  // Indicator K2, required

    @Column(name = "k3", nullable = false)
    var k3: String,  // Indicator K3, required

    @ManyToOne
    @JoinColumn(name = "criteria_group_id", nullable = false)
    var criteriaGroup: CriteriaGroup  // Foreign key to CriteriaGroup, required
) {
    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Criteria

        return id == other.id
    }

    override fun hashCode(): Int = id.hashCode()

    override fun toString(): String =
        "Criteria(id=$id, code='$code', fullname='$fullName', " +
                "k1='$k1', k2='$k2', k3='$k3', criteriaGroup=$criteriaGroup)"
}
